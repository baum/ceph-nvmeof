name: Run pytest
on: [push, pull_request, workflow_dispatch]

jobs:
  pytest:
    strategy:
      matrix:
        test: ["cli", "state", "multi-gateway"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # git submodule update --init --recursive
          submodules: recursive

      - name: Build images
        run: |
          make build

      - name: Setup huge pages
        run: |
          make setup

      - name: Start ceph-cluster
        run: |
          PYTHON_INTERPRETER=python3
          VERSION=$($PYTHON_INTERPRETER -c "print(__import__('control').__version__)")
          VERSION=$VERSION docker-compose up --detach ceph

      - name: Wait for the ceph-cluster container to become healthy
        run: |
          while true; do
            container_status=$(docker inspect --format='{{.State.Health.Status}}' ceph)
            if [[ $container_status == "healthy" ]]; then
            break
          else
            # Wait for a specific time before checking again
            sleep 1
          fi
          done

      - name: Create RBD image
        run: |
          echo "üíÅ ceph list pools:"
          docker exec ceph ceph osd lspools
          echo "üíÅ rbd create:"
          docker exec ceph rbd create rbd/mytestdevimage --size 16
          echo "üíÅ ls rbd:"
          docker exec ceph rbd ls rbd

      - name: Run ${{ matrix.test }} test
        run: |
          PYTHON_INTERPRETER=python3
          VERSION=$($PYTHON_INTERPRETER -c "print(__import__('control').__version__)")
          VERSION=$VERSION docker-compose run nvmeof-pytest-${{ matrix.test }} || (docker-compose logs; exit 1)

      - name: Display Logs
        run: |
          docker-compose logs

      - name: Compose Down
        run: make down

      - name: Compose Stop
        run: make stop
